services:
  load-balancer:
    image: nginx
    container_name: load-balancer
    ports:
      - "80:80"
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - app-network
    
  my-postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: supersecret123
      POSTGRES_DB: minitwitter
    ports:
      - "5432:5432"
    restart: always
    volumes:
      - ./docker-data/postgres:/var/lib/postgresql/data
    networks:
      - app-network

  post-api-1:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: post-api-1
    image: minitwitter
    environment: 
      DATABASE_URL: postgresql://postgres:supersecret123@my-postgres:5432/minitwitter
      CACHE_ACTIVE: true   
      OLLAMA_HOST: http://ollama:12434
      OLLAMA_MODEL: llama3.2:1b
      REDIS_HOST: redis
      SERVER_ROLE: api 
    # command: /bin/sh -c "bunx drizzle-kit push && bun run prod"
    networks:
      - app-network
    restart: always
    depends_on:
      - my-postgres

  post-api-2:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: post-api-2
    image: minitwitter
    environment: 
      DATABASE_URL: postgresql://postgres:supersecret123@my-postgres:5432/minitwitter
      CACHE_ACTIVE: true   
      OLLAMA_HOST: http://ollama:12434
      OLLAMA_MODEL: llama3.2:1b
      REDIS_HOST: redis
      SERVER_ROLE: api 
    # command: /bin/sh -c "bunx drizzle-kit push && bun run prod"
    networks:
      - app-network
    restart: always
    depends_on:
      - my-postgres

  minitwitter-frontend:
    build:
      context: frontend
      dockerfile: Dockerfile
    container_name: minitwitter-frontend
    environment:
      - NUXT_PUBLIC_API_BASE_URL='http://localhost:80'
    
    networks:
      - app-network
    depends_on:
      - post-api-1
      - post-api-2
    restart: always
      
  ollama:
    image: ollama/ollama
    container_name: ollama
    ports:
      - "12434:11434"
    volumes:
      - ./docker-data/ollama:/root/.ollama
    networks:
      - app-network
    restart: always

  redis:
    image: redis/redis-stack:latest
    ports:
      - "6379:6379"
      - "8001:8001"
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
    volumes:
      - redis_data:/data
    networks:
      - app-network
    restart: always

  minitwitter-worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: minitwitter-worker
    image: minitwitter
    environment:
      DATABASE_URL: postgresql://postgres:supersecret123@my-postgres:5432/minitwitter
      CACHE_ACTIVE: true   
      OLLAMA_HOST: http://ollama:12434
      OLLAMA_MODEL: llama3.2:1b
      REDIS_HOST: redis
      SERVER_ROLE: worker 
    depends_on:
      - my-postgres
    restart: always
    networks:
      - app-network


networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
